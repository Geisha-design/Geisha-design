<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CHERRY-SAKURA</title>
  <icon>http://example.com/icon.png</icon>
  <subtitle>穿梭时间的画面的钟，从反方向开始移动</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-02-05T09:08:20.930Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>齐雨争</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>咖啡设备新体验-星粒咖啡杯</title>
    <link href="http://example.com/2022/02/05/port%E5%92%96%E5%95%A1%E8%AE%BE%E5%A4%87%E6%96%B0%E4%BD%93%E9%AA%8C-%E6%98%9F%E7%B2%92%E5%92%96%E5%95%A1%E6%9D%AF/"/>
    <id>http://example.com/2022/02/05/port%E5%92%96%E5%95%A1%E8%AE%BE%E5%A4%87%E6%96%B0%E4%BD%93%E9%AA%8C-%E6%98%9F%E7%B2%92%E5%92%96%E5%95%A1%E6%9D%AF/</id>
    <published>2022-02-05T08:05:21.000Z</published>
    <updated>2022-02-05T09:08:20.930Z</updated>
    
    
    <summary type="html">&lt;p&gt;我觉得有二不需要换三，三零件多的确使用麻烦一些。优点是可以直接打到任意咖啡杯里。出品我没感觉到差异。&lt;/p&gt;
&lt;p&gt;———————————————————&lt;/p&gt;
&lt;p&gt;最近被组里种草了星粒三 和玲珑手磨 &lt;/p&gt;
&lt;p&gt;因为我已经有栗子c 和星粒二，用的还不错，但是看到群里讨论压粉，隔热垫，泄压 感觉特别专业（不是）所以我决定升级一下设备。然后把旧设备分别送给我两个闺蜜&lt;/p&gt;</summary>
    
    
    
    <category term="coffee" scheme="http://example.com/categories/coffee/"/>
    
    
    <category term="coffee" scheme="http://example.com/tags/coffee/"/>
    
  </entry>
  
  <entry>
    <title>不从游戏设计谈谈DEEMO</title>
    <link href="http://example.com/2022/01/04/port%E4%BB%8E%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E8%B0%88DEEMO/"/>
    <id>http://example.com/2022/01/04/port%E4%BB%8E%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E8%B0%88DEEMO/</id>
    <published>2022-01-04T10:00:04.000Z</published>
    <updated>2022-01-04T13:49:04.688Z</updated>
    
    
    <summary type="html">&lt;p&gt;尽管《Deemo》只是一款手机音乐游戏，但我想只要提起它，很少有人会忘记。&lt;/p&gt;
&lt;p&gt;2013年11月，由雷亚制作的《Deemo》正式发布。作为一款音乐手游，《Deemo》的剧情并非无足轻重。相反的，由于主角“小黑人”与从天而降的“无名少女”充满神秘感，以及游戏里存在无解的“神秘代码”，令《Deemo》自发布之初就引发了无数玩家的好奇心。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://pic4.zhimg.com/80/v2-233f18fd8708ee9001706577b984412f_1440w.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="DEEMO LAYARK" scheme="http://example.com/tags/DEEMO-LAYARK/"/>
    
  </entry>
  
  <entry>
    <title>二阶常系数微分方程的解的问题</title>
    <link href="http://example.com/2021/11/30/%E2%80%9C%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E2%80%9D/"/>
    <id>http://example.com/2021/11/30/%E2%80%9C%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E2%80%9D/</id>
    <published>2021-11-30T10:43:45.000Z</published>
    <updated>2022-01-04T08:13:29.219Z</updated>
    
    
    <summary type="html">最近关于常见小问题的一个总结，主要针对此类题型的记忆。</summary>
    
    
    
    
    <category term="高数" scheme="http://example.com/tags/%E9%AB%98%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>重新理解链表的节点与指针</title>
    <link href="http://example.com/2021/11/17/%EF%BC%88%E9%87%8D%E6%96%B0%E7%90%86%E8%A7%A3%EF%BC%89%E2%80%9D/"/>
    <id>http://example.com/2021/11/17/%EF%BC%88%E9%87%8D%E6%96%B0%E7%90%86%E8%A7%A3%EF%BC%89%E2%80%9D/</id>
    <published>2021-11-17T11:29:24.000Z</published>
    <updated>2022-01-04T09:37:08.989Z</updated>
    
    
    <summary type="html">&lt;p&gt;下图为头指针与头结点以及首元结点的关系-0&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s3.bmp.ovh/imgs/2022/01/3ab90c8563e3503e.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;链表定义：c语言 &lt;/p&gt;
&lt;p&gt;typedef struct LinkList&lt;br&gt;{&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;     int Element;
 
     LinkList * next;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}LinkList;&lt;/p&gt;</summary>
    
    
    
    
    <category term="c++" scheme="http://example.com/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>冲突域和广播域</title>
    <link href="http://example.com/2021/11/07/%E2%80%9C%E5%86%B2%E7%AA%81%E5%9F%9F%E5%92%8C%E5%B9%BF%E6%92%AD%E5%9F%9F%E2%80%9D/"/>
    <id>http://example.com/2021/11/07/%E2%80%9C%E5%86%B2%E7%AA%81%E5%9F%9F%E5%92%8C%E5%B9%BF%E6%92%AD%E5%9F%9F%E2%80%9D/</id>
    <published>2021-11-07T07:07:36.000Z</published>
    <updated>2022-01-04T08:15:33.132Z</updated>
    
    
    <summary type="html">&lt;p&gt;形象比喻：局域网好比一栋大楼，每个人（好比主机）有自己的房间（房间就好比网卡，房号就是物理地址，即MAC地址），里面的人（主机）人手一个对讲机，由于工作在同一频道，所以一个人说话，其他人都能听到，这就是广播（向所有主机发送信息包），只有目标才会回应，其他人虽然听见但是不理（丢弃包），而这些能听到广播的所有对讲机设备就够成了一个广播域。而这些对讲机就是集线器（HUB），每个对讲机都像是集线器上的端口，大家都知道对讲机在说话时是不能收听的，必须松开对讲键才能收听，这种同一时刻只能收或者发的工作模式就是半双工。而且对讲机同一时刻只能有一个人说话才能听清楚，如果两个或者更多的人一起说就会产生冲突，都没法听清楚，所以这就构成了一个冲突域。&lt;/p&gt;</summary>
    
    
    
    
    <category term="计算机网络" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>手冲豆种--洪都拉斯雪莉</title>
    <link href="http://example.com/2021/09/30/%E2%80%9C%E6%B4%AA%E9%83%BD%E6%8B%89%E6%96%AF%E9%9B%AA%E8%8E%89%E2%80%9D/"/>
    <id>http://example.com/2021/09/30/%E2%80%9C%E6%B4%AA%E9%83%BD%E6%8B%89%E6%96%AF%E9%9B%AA%E8%8E%89%E2%80%9D/</id>
    <published>2021-09-30T15:13:03.000Z</published>
    <updated>2022-01-04T13:49:04.694Z</updated>
    
    
    <summary type="html">&lt;p&gt;【洪都拉斯· 雪莉】&lt;/p&gt;
&lt;p&gt;国家：洪都拉斯&lt;/p&gt;
&lt;p&gt;产区：马萨瓜拉&lt;/p&gt;
&lt;p&gt;庄园：莫卡庄园&lt;/p&gt;
&lt;p&gt;海拔：1500-1700m&lt;/p&gt;
&lt;p&gt;品种：卡杜拉、卡杜艾、帕卡斯&lt;/p&gt;
&lt;p&gt;处理法：精致水洗威士忌雪莉酒桶发酵&lt;/p&gt;</summary>
    
    
    
    <category term="coffee" scheme="http://example.com/categories/coffee/"/>
    
    
    <category term="coffee" scheme="http://example.com/tags/coffee/"/>
    
  </entry>
  
  <entry>
    <title>咖啡入门浅析</title>
    <link href="http://example.com/2021/09/22/%E2%80%9C%E5%92%96%E5%95%A1%E5%85%A5%E9%97%A8%E6%B5%85%E6%9E%90%E2%80%9D/"/>
    <id>http://example.com/2021/09/22/%E2%80%9C%E5%92%96%E5%95%A1%E5%85%A5%E9%97%A8%E6%B5%85%E6%9E%90%E2%80%9D/</id>
    <published>2021-09-22T05:21:23.000Z</published>
    <updated>2022-01-04T08:18:44.333Z</updated>
    
    
    <summary type="html">&lt;p&gt;当前时代也可以说是咖啡的时代，虽然我们的日常生活中充斥着各种各样的咖啡，但其实我们也许对一杯咖啡风味的基本构成都不甚了解，此文章为鄙人对咖啡风味构成的一些浅薄的认识。&lt;/p&gt;</summary>
    
    
    
    <category term="coffee" scheme="http://example.com/categories/coffee/"/>
    
    
    <category term="coffee" scheme="http://example.com/tags/coffee/"/>
    
  </entry>
  
  <entry>
    <title>深入理解全微分</title>
    <link href="http://example.com/2021/08/22/port%E2%80%9C%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%85%A8%E5%BE%AE%E5%88%86%E2%80%9D/"/>
    <id>http://example.com/2021/08/22/port%E2%80%9C%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%85%A8%E5%BE%AE%E5%88%86%E2%80%9D/</id>
    <published>2021-08-22T07:12:51.000Z</published>
    <updated>2022-01-04T13:49:04.691Z</updated>
    
    
    <summary type="html">&lt;p&gt;一元函数微分很容易理解，直观，但是推广到多维后，尽管教科书给出了严格定义，但总觉得中间有道坎，想不明白。本文用图形帮助大家直观理解全微分。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一元可微函数：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果一元函数可微，则&lt;strong&gt;利用直线代替曲线估计函数值的变化&lt;/strong&gt;，得到，&lt;/p&gt;</summary>
    
    
    
    <category term="高等数学" scheme="http://example.com/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>格林公式</title>
    <link href="http://example.com/2021/08/22/port%E6%A0%BC%E6%9E%97%E5%85%AC%E5%BC%8F/"/>
    <id>http://example.com/2021/08/22/port%E6%A0%BC%E6%9E%97%E5%85%AC%E5%BC%8F/</id>
    <published>2021-08-22T07:08:03.000Z</published>
    <updated>2022-01-04T13:49:04.691Z</updated>
    
    
    <summary type="html">&lt;p&gt;众所周知，格林公式作为KO与路径无关的第二类曲线积分的杀招，是秀的。但至于&lt;strong&gt;为什么适用于路径无关的情况、路径无关的判据为什么是 &lt;img src=&quot;https://www.zhihu.com/equation?tex=%5Cfrac+%7B%5Cpartial+Q%7D%7B%5Cpartial+X%7D=%5Cfrac+%7B%5Cpartial+P%7D%7B%5Cpartial+Y%7D++&quot; alt=&quot;[公式]&quot;&gt; ，为什么线积分能够等效成一个二重积分&lt;/strong&gt;。很多人一脸黑人问号。&lt;/p&gt;</summary>
    
    
    
    <category term="高等数学" scheme="http://example.com/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>主题字体的修改</title>
    <link href="http://example.com/2021/08/21/port%E2%80%9C%E5%AD%97%E4%BD%93%E2%80%9D/"/>
    <id>http://example.com/2021/08/21/port%E2%80%9C%E5%AD%97%E4%BD%93%E2%80%9D/</id>
    <published>2021-08-21T13:30:30.000Z</published>
    <updated>2022-01-04T13:49:04.690Z</updated>
    
    
    <summary type="html">&lt;p&gt;起因：思源宋体真的很好看&lt;br&gt;需求：将 blog 的标题与正文修改为思源宋体&lt;br&gt;tips：每一步的目的都是猜的，用词对不对我也不知道，大概理会中心思想就好&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>DNS系统详细解析</title>
    <link href="http://example.com/2021/06/18/%E2%80%9Cdns%E7%B3%BB%E7%BB%9F%E8%AF%A6%E7%BB%86%E8%A7%A3%E6%9E%90%E2%80%9D/"/>
    <id>http://example.com/2021/06/18/%E2%80%9Cdns%E7%B3%BB%E7%BB%9F%E8%AF%A6%E7%BB%86%E8%A7%A3%E6%9E%90%E2%80%9D/</id>
    <published>2021-06-18T12:47:07.000Z</published>
    <updated>2022-01-04T13:49:04.693Z</updated>
    
    
    <summary type="html">&lt;p&gt;DNS系统概述：域名系统DNS（domain name system）是因特网使用的命名系统，用来把便于人们记忆的含有特定含义的主机名转换为便于机器处理的IP地址，值得注意的是，DNS系统采用C/S架构，其协议运行在UDP之上，使用53号端口。DNS分为三个部分，层次域名空间，域名服务器和解析器。层次域名空间：因特网采用层次树状结构的命名方法。任何一个连接在因特网上的主机或者路由器，都有一个唯一的层次结构的名字，即域名（Domain。&lt;/p&gt;</summary>
    
    
    
    
    <category term="计算机网络" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>计算机文件系统</title>
    <link href="http://example.com/2021/04/24/%E2%80%9C%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E2%80%9D/"/>
    <id>http://example.com/2021/04/24/%E2%80%9C%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E2%80%9D/</id>
    <published>2021-04-24T08:45:00.000Z</published>
    <updated>2022-01-04T13:49:04.696Z</updated>
    
    
    <summary type="html">&lt;p&gt;文件系统的基本组成：&lt;/p&gt;
&lt;p&gt;文件系统是操作系统中负责管理持久数据的子系统，说简单点，就是负责把用户的文件存到磁盘硬件中，因为即使计算机断电了，磁盘里的数据并不会丢失，所以可以持久化的保存文件。&lt;/p&gt;
&lt;p&gt;文件系统的基本数据单位是文件，它的目的是对磁盘上的文件进行组织管理，那组织的方式不同，就会形成不同的文件系统。&lt;/p&gt;</summary>
    
    
    
    <category term="计算机常识" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%B8%B8%E8%AF%86/"/>
    
    
  </entry>
  
  <entry>
    <title>幂级数的本质</title>
    <link href="http://example.com/2021/04/22/%E2%80%9C%E5%B9%82%E7%BA%A7%E6%95%B0%E7%9A%84%E6%9C%AC%E8%B4%A8%E2%80%9D/"/>
    <id>http://example.com/2021/04/22/%E2%80%9C%E5%B9%82%E7%BA%A7%E6%95%B0%E7%9A%84%E6%9C%AC%E8%B4%A8%E2%80%9D/</id>
    <published>2021-04-22T12:24:44.000Z</published>
    <updated>2022-01-04T13:49:04.695Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;级数（幂级数）&quot;&gt;&lt;a href=&quot;#级数（幂级数）&quot; class=&quot;headerlink&quot; title=&quot;级数（幂级数）&quot;&gt;&lt;/a&gt;级数（幂级数）&lt;/h1&gt;&lt;h2 id=&quot;回到梦开始的地方&quot;&gt;&lt;a href=&quot;#回到梦开始的地方&quot; class=&quot;headerlink&quot; title=&quot;回到梦开始的地方&quot;&gt;&lt;/a&gt;回到梦开始的地方&lt;/h2&gt;&lt;p&gt;在一元函数微积分的世界中，我们沿着极限、导数、微分、积分的路已经走出了一段路。&lt;/p&gt;</summary>
    
    
    
    <category term="高等数学" scheme="http://example.com/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>坂本龙一先生对我的影响</title>
    <link href="http://example.com/2021/04/16/%E2%80%9C%E5%9D%82%E6%9C%AC%E9%BE%99%E4%B8%80%E5%85%88%E7%94%9F%E5%AF%B9%E6%88%91%E7%9A%84%E5%BD%B1%E5%93%8D%E2%80%9D/"/>
    <id>http://example.com/2021/04/16/%E2%80%9C%E5%9D%82%E6%9C%AC%E9%BE%99%E4%B8%80%E5%85%88%E7%94%9F%E5%AF%B9%E6%88%91%E7%9A%84%E5%BD%B1%E5%93%8D%E2%80%9D/</id>
    <published>2021-04-16T15:40:31.000Z</published>
    <updated>2022-01-04T13:49:04.695Z</updated>
    
    
    <summary type="html">揭开狂热的自我之象，你我放的瞥见真我。</summary>
    
    
    
    <category term="生活" scheme="http://example.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="艺术家" scheme="http://example.com/tags/%E8%89%BA%E6%9C%AF%E5%AE%B6/"/>
    
  </entry>
  
  <entry>
    <title>四种JavaEE架构简介</title>
    <link href="http://example.com/2020/11/29/%E5%9B%9B%E7%A7%8DJavaEE%E6%9E%B6%E6%9E%84%E7%AE%80%E4%BB%8B/"/>
    <id>http://example.com/2020/11/29/%E5%9B%9B%E7%A7%8DJavaEE%E6%9E%B6%E6%9E%84%E7%AE%80%E4%BB%8B/</id>
    <published>2020-11-29T12:05:25.000Z</published>
    <updated>2022-01-04T13:49:04.694Z</updated>
    
    
    <summary type="html">&lt;p&gt;传统三层架构&lt;/p&gt;
&lt;p&gt;配图是一个基于MVC的三层架构, 大致可以分成表现层, 业务层和持久层。表现层负责接收请求和转发请求。业务层主要负责处理请求, 值得注意的是事务管理, 日志记录等操作通常也是封装在这层中。持久层主要负责数据库与实体之间的操作，我们可以使用框架来简化各层的开发, 例如表现层使用SpringMVC或Strut2, 持久层使用Mybatis或Hibernate, 使用Spring管理三层之间的关系&lt;/p&gt;</summary>
    
    
    
    <category term="java" scheme="http://example.com/categories/java/"/>
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>kmp算法解析</title>
    <link href="http://example.com/2020/11/19/kmp%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90/"/>
    <id>http://example.com/2020/11/19/kmp%E7%AE%97%E6%B3%95%E8%A7%A3%E6%9E%90/</id>
    <published>2020-11-19T12:33:03.000Z</published>
    <updated>2022-01-04T13:49:04.692Z</updated>
    
    
    <summary type="html">&lt;p&gt;有些算法，适合从它产生的动机，如何设计与解决问题这样正向地去介绍。但KMP算法真的不适合这样去学。最好的办法是先搞清楚它所用的数据结构是什么，再搞清楚怎么用，最后为什么的问题就会有恍然大悟的感觉。我试着从这个思路再介绍一下。大家只需要记住一点，PMT是什么东西。然后自己临时推这个算法也是能推出来的，完全不需要死记硬背。&lt;/p&gt;</summary>
    
    
    
    <category term="数据结构" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="数据结构" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>数据结构之栈Stack和队列Queue</title>
    <link href="http://example.com/2020/04/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E6%A0%88Stack%E5%92%8C%E9%98%9F%E5%88%97Queue/"/>
    <id>http://example.com/2020/04/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E6%A0%88Stack%E5%92%8C%E9%98%9F%E5%88%97Queue/</id>
    <published>2020-04-23T14:06:03.000Z</published>
    <updated>2020-05-08T14:06:03.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;栈（Stack）和队列（Queue），了解栈和队列的基础知识，学习它们的基础应用。&lt;/p&gt;</summary>
    
    
    
    <category term="数据结构与算法" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="Stack" scheme="http://example.com/tags/Stack/"/>
    
    <category term="Queue" scheme="http://example.com/tags/Queue/"/>
    
  </entry>
  
  <entry>
    <title>数据结构之线性表List</title>
    <link href="http://example.com/2020/04/20/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E7%BA%BF%E6%80%A7%E8%A1%A8List/"/>
    <id>http://example.com/2020/04/20/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E7%BA%BF%E6%80%A7%E8%A1%A8List/</id>
    <published>2020-04-20T08:20:49.000Z</published>
    <updated>2020-04-23T08:20:49.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;线性表（List），了解线性表的基础知识，认识一下线性表的种类。&lt;/p&gt;</summary>
    
    
    
    <category term="数据结构与算法" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="线性表" scheme="http://example.com/tags/%E7%BA%BF%E6%80%A7%E8%A1%A8/"/>
    
    <category term="List" scheme="http://example.com/tags/List/"/>
    
  </entry>
  
  <entry>
    <title>算法之基础</title>
    <link href="http://example.com/2020/04/18/%E7%AE%97%E6%B3%95%E4%B9%8B%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2020/04/18/%E7%AE%97%E6%B3%95%E4%B9%8B%E5%9F%BA%E7%A1%80/</id>
    <published>2020-04-18T08:21:21.000Z</published>
    <updated>2020-04-19T08:21:21.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;算法基础，了解算法的基础知识，算法的种类，知道什么是好算法。&lt;/p&gt;</summary>
    
    
    
    <category term="数据结构与算法" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="基础" scheme="http://example.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="Big O" scheme="http://example.com/tags/Big-O/"/>
    
  </entry>
  
  <entry>
    <title>数据结构之基础</title>
    <link href="http://example.com/2020/04/18/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%9F%BA%E7%A1%80/"/>
    <id>http://example.com/2020/04/18/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%9F%BA%E7%A1%80/</id>
    <published>2020-04-18T08:20:49.000Z</published>
    <updated>2020-04-20T08:20:49.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;数据结构基础，了解数据结构的分类，认识一下抽象数据类。&lt;/p&gt;</summary>
    
    
    
    <category term="数据结构与算法" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="基础" scheme="http://example.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="抽象数据类" scheme="http://example.com/tags/%E6%8A%BD%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%B1%BB/"/>
    
  </entry>
  
</feed>
