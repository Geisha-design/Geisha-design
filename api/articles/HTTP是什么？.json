{"title":"HTTP是什么？","slug":"HTTP是什么？","date":"2020-04-10T06:15:34.000Z","updated":"2020-04-10T06:15:34.000Z","comments":true,"path":"api/articles/HTTP是什么？.json","photos":[],"link":"","excerpt":"HTTP是客户端和服务端之间互动需要准守的其中一种协议。在日常上网过程中，用户通过浏览器浏览目标网站的操作，看起来就是进入目标网站的门户之后，想看哪里就点哪里，但是实际上客户端和服务端之间的数据互动都是通过一套标准来执行的。用旧时代的眼光来看就是网络节点两边统一使用了莫斯代码，所以两边之间的交流就没有了障碍。","covers":["/gallery/http-request-format.png","/gallery/http-request-example.jpg","/gallery/http-response-format.png","/gallery/http-response-example.jpg"],"content":"<p>HTTP是客户端和服务端之间互动需要准守的其中一种协议。在日常上网过程中，用户通过浏览器浏览目标网站的操作，看起来就是进入目标网站的门户之后，想看哪里就点哪里，但是实际上客户端和服务端之间的数据互动都是通过一套标准来执行的。用旧时代的眼光来看就是网络节点两边统一使用了莫斯代码，所以两边之间的交流就没有了障碍。</p>\n<span id=\"more\"></span>\n\n<p><strong>先来个更好的文章做参考：<a href=\"//www.cnblogs.com/an-wen/p/11180076.html\">HTTP协议超级详解</a></strong></p>\n<h1 id=\"HTTP-1-1\"><a href=\"#HTTP-1-1\" class=\"headerlink\" title=\"HTTP/1.1\"></a>HTTP/1.1</h1><p>HTTP属于TCP/IP中的“顶层”应用层，这说明HTTP的包装是数据出发前的第一步。在这里不谈TCP相关连接过程，但是HTTP请求/响应都是要在连接之后的事；想看的话，可以看<a href=\"//www.cnblogs.com/kaleidoscope/p/9701117.html\">TCP三次握手详解及释放连接过程</a>。基本上HTTP就是请求和响应的模式，在服务方想理你客户方的情况下，你想要什么，她都会回应你。</p>\n<p>HTTP请求方法：</p>\n<ul>\n<li>GET，一般请求的数据都是不需要处理的数据</li>\n<li>HEAD，获取metadata，打个比方就是电脑上文件右键属性</li>\n<li>POST，一般请求的数据都是需要处理的数据</li>\n<li>PUT，像数据库的INSERT</li>\n<li>DELETE，像数据库的DELETE</li>\n<li>PATCH，像数据库的UPDATE</li>\n<li>还有TRACE、OPTIONS、CONNECT</li>\n</ul>\n<p>HTTP状态码：</p>\n<ul>\n<li>100及以上，普通的信息代码</li>\n<li>200及以上，请求成功被处理</li>\n<li>300及以上，请求被重定向了</li>\n<li>400及以上，这是客户方的错</li>\n<li>500及以上，这是服务方的错</li>\n</ul>\n<h2 id=\"HTTP请求-响应报文结构\"><a href=\"#HTTP请求-响应报文结构\" class=\"headerlink\" title=\"HTTP请求/响应报文结构\"></a>HTTP请求/响应报文结构</h2><p><img src=\"/gallery/http-request-format.png\" alt=\"HTTP请求报文结构\"><em>Image from: <a href=\"//www.cnblogs.com/an-wen/p/11180076.html\">HTTP协议超级详解</a></em></p>\n<p><img src=\"/gallery/http-request-example.jpg\" alt=\"HTTP请求报文例子\"><em>Image from: <a href=\"//www.cnblogs.com/an-wen/p/11180076.html\">HTTP协议超级详解</a></em></p>\n<p><img src=\"/gallery/http-response-format.png\" alt=\"HTTP响应报文结构\"><em>Image from: <a href=\"//www.cnblogs.com/an-wen/p/11180076.html\">HTTP协议超级详解</a></em></p>\n<p><img src=\"/gallery/http-response-example.jpg\" alt=\"HTTP响应报文例子\"><em>Image from: <a href=\"//www.cnblogs.com/an-wen/p/11180076.html\">HTTP协议超级详解</a></em></p>\n<h2 id=\"比较HTTP-1-1和HTTP-2\"><a href=\"#比较HTTP-1-1和HTTP-2\" class=\"headerlink\" title=\"比较HTTP/1.1和HTTP/2\"></a>比较HTTP/1.1和HTTP/2</h2><ul>\n<li>HTTP/2在一次TCP连接中可以同时发送多个请求，多行程减少了连接次数和响应的等待时间</li>\n<li>HTTP/2压缩头部信息，包裹更小，运输更方便</li>\n<li>HTTP/2使用二进制协议，不仅节省了不少分隔符和封箱胶带，还可以分成小份包装以数据流形式发送</li>\n<li>HTTP/2允许服务端推送，一次请求把相关依赖的脚本也给客户端一起发来，很人性化</li>\n</ul>\n<h1 id=\"HTTPS\"><a href=\"#HTTPS\" class=\"headerlink\" title=\"HTTPS\"></a>HTTPS</h1><p>在HTTP包装外再来个SSL/TLS加密包装，HTTPS有以下特点：</p>\n<ol>\n<li>内容加密，传输过程中使用的密文</li>\n<li>验证身份，找到对的服务端</li>\n<li>保护数据完整性，防止传输过程中被动手脚</li>\n</ol>\n<p>基本上传输中的数据不易被动手脚。</p>\n<p><strong><em>更多可以百度HTTP、HTTPS、TCP连接等。</em></strong></p>\n","categories":[{"name":"网络","slug":"网络","count":2,"path":"api/categories/网络.json"}],"tags":[{"name":"HTTP","slug":"HTTP","count":1,"path":"api/tags/HTTP.json"},{"name":"HTTPS","slug":"HTTPS","count":1,"path":"api/tags/HTTPS.json"}]}