{"name":"java","slug":"java","count":2,"posts":[{"title":"Rails学习笔记-11.2","slug":"“Rail学习笔记”","date":"2020-02-12T13:41:00.000Z","updated":"2022-01-04T13:49:04.693Z","comments":true,"pin":null,"path":"api/articles/“Rail学习笔记”.json","excerpt":"<p>11.2 迭代F2:建立一个基于Ajax的购物车，开始是按照书里面写的，创建create.js.rjs，网上查了，需要使用protype-rails gem，于是安装了，但是页面点击后ajax没有效果，需要手动刷新后才能出现。于是在网上查了,由于默认使用jquery，所以就改成了jquery的，创建create.js.erb，内容为$(‘#cart’).html(“&lt;%= escape_javascript(render(@cart)) %&gt;”);</p>","keywords":null,"cover":null,"content":null,"text":"11.2 迭代F2:建立一个基于Ajax的购物车，开始是按照书里面写的，创建create.js.rjs，网上查了，需要使用protype-rails gem，于是安装了，但是页面点击后ajax没有效果，需要手动刷新后才能出现。于是在网上查了,由于默认使用jquery，所以就改成了","link":"","raw":null,"photos":[],"categories":[{"name":"java","slug":"java","count":2,"path":"api/categories/java.json"}],"tags":[{"name":"rails","slug":"rails","count":1,"path":"api/tags/rails.json"},{"name":"web","slug":"web","count":1,"path":"api/tags/web.json"}]},{"title":"四种JavaEE架构简介","slug":"四种JavaEE架构简介","date":"2020-11-29T12:05:25.000Z","updated":"2022-01-04T13:49:04.694Z","comments":true,"pin":null,"path":"api/articles/四种JavaEE架构简介.json","excerpt":"<p>传统三层架构</p>\n<p>配图是一个基于MVC的三层架构, 大致可以分成表现层, 业务层和持久层。表现层负责接收请求和转发请求。业务层主要负责处理请求, 值得注意的是事务管理, 日志记录等操作通常也是封装在这层中。持久层主要负责数据库与实体之间的操作，我们可以使用框架来简化各层的开发, 例如表现层使用SpringMVC或Strut2, 持久层使用Mybatis或Hibernate, 使用Spring管理三层之间的关系</p>","keywords":null,"cover":"https://images2018.cnblogs.com/blog/1471979/201808/1471979-20180829105155049-481908758.png","content":null,"text":"传统三层架构配图是一个基于MVC的三层架构, 大致可以分成表现层, 业务层和持久层。表现层负责接收请求和转发请求。业务层主要负责处理请求, 值得注意的是事务管理, 日志记录等操作通常也是封装在这层中。持久层主要负责数据库与实体之间的操作，我们可以使用框架来简化各层的开发, 例如表","link":"","raw":null,"photos":[],"categories":[{"name":"java","slug":"java","count":2,"path":"api/categories/java.json"}],"tags":[{"name":"java","slug":"java","count":1,"path":"api/tags/java.json"}]}]}